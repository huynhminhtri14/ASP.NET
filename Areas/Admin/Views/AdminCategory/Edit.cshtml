@model HuynhMinhTri_2122110256.Models.Category

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "AdminCategory", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal card mt-4">
        <h4 class="text-center font-weight-bold">Chỉnh sửa danh mục</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.category_id)

        <div class="form-group">
            @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.category_id, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.categoryName, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.categoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                @if (ViewData.ModelState.ContainsKey("Description"))
                {
                    <div class="text-danger">@ViewData.ModelState["Description"].Errors.FirstOrDefault()Mô tả không được vượt quá 500 ký tự.</div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.image))
                {
                    <div>
                        <img src="~/Content/images/category/@Model.image" alt="@Model.categoryName" class="img-thumbnail" style="max-width: 200px;" />
                    </div>
                }
                <input type="file" name="ImageUpload" />
                <input type="hidden" name="ExistingImagePath" value="@Model.image" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.typeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.typeId, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                @Html.ValidationMessageFor(model => model.typeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.showOnHomePage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.showOnHomePage)
                    @Html.ValidationMessageFor(model => model.showOnHomePage, "", new { @class = "text-danger col-md-10" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu thay đổi" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay về danh sách", "Index")
</div>
